// 地上有一个m行和n列的方格。一个机器人从坐标0,0的格子开始移动，每一次只能向左，右，上，下四个方向移动一格，但是不能进入行坐标和列坐标的数位之和大于k的格子。
// 例如，当k为18时，机器人能够进入方格（35,37），因为3+5+3+7 = 18。但是，它不能进入方格（35,38），因为3+5+3+8 = 19。请问该机器人能够达到多少个格子？


class Solution {
public:
    
    int movingCount(int threshold, int rows, int cols)
    {
        // 输入判断
        if(rows<1||cols<1)
        {
            return 0;
        }
        
        bool *visited = new bool[rows*cols];
        memset(visited,0,cols*rows);
        
        int count = SearchCount(threshold,rows,cols,0,0,visited);

        delete [] visited;
        return count;
    }
    
    int SearchCount(int threshold,int rows,int cols,int row,int col,bool *visited)
    {
        int n_sum = getSum(row) + getSum(col);
        int count = 0;
        if(threshold>=n_sum&&col>=0&&col<cols&&row>=0&&row<rows&&!visited[col+cols*row])
        {
            visited[col+cols*row] = true;
            
            count = 1 + SearchCount(threshold,rows,cols,row-1,col,visited)+
                            SearchCount(threshold,rows,cols,row+1,col,visited)+
                            SearchCount(threshold,rows,cols,row,col-1,visited)+
                            SearchCount(threshold,rows,cols,row,col+1,visited);
        }
        
        return count;
    }
    
    // 获取数字和函数
    int getSum(int num)
    {
        int sum = 0;
        int temp = 0;
        while(num>0)
        {
            temp = num % 10;
            num = num / 10;
            sum = sum + temp;
        }

        
        return sum;
    }
    
};