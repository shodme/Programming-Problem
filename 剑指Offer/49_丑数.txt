// 把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。

class Solution {
public:
        int GetUglyNumber_Solution(int index)
        {

            if(index<=0)
                return 0;
            int *array = new int[index];

            array[0] = 1;
            int temp = 1;
            
            int *p2 = array;
            int *p3 = array;           
            int *p5 = array;
            
            while(temp<index)
            {
                int min = Min(*p2*2,*p3*3,*p5*5);
                array[temp] = min;
                while(*p2*2<=array[temp])
                    p2++;
                while(*p3*3<=array[temp])
                    p3++;
                while(*p5*5<=array[temp])
                    p5++;
                
                
                temp++;
                
            }
          
            
            int ugly = array[index-1];
            delete [] array;
            return ugly;
        }
    
        int Min(int number1,int number2,int number3)
        {
            int min = (number1<number2)?number1:number2;
            min = (min<number3)?min:number3;
            
            return min;
            
        }
    
    
};







class Solution1 {
public:
        bool IsUgly(int number)
        {
            while(number % 2 == 0)
                number /= 2;
            while(number % 3 == 0)
                number /= 3;
            while(number % 5 == 0)
                number /= 5;

            return (number == 1) ? true : false;
        }

        int GetUglyNumber_Solution(int index)
        {
            if(index <= 0)
                return 0;

            int number = 0;
            int uglyFound = 0;
            while(uglyFound < index)
            {
                ++number;

                if(IsUgly(number))
                    ++uglyFound;
            }

            return number;
        }
};